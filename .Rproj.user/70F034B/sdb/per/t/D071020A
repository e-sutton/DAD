{
    "collab_server" : "",
    "contents" : "#DAD project analysis\n\n#libraries\nlibrary(ggplot2)\n\n#read in video game sales csv\nvgData = read.csv(\"vgsales.csv\", stringsAsFactors = F)\nView(vgData)\nmean(vgData$EU_Sales)\nboxplot(vgData$NA_Sales)\n\n\n#get subset data of each platform\nsubsetWii = subset(vgData, Platform == \"Wii\")\nsubsetNES = subset(vgData, Platform == \"NES\")\nsubsetGB = subset(vgData, Platform == \"GB\")\nsubsetDS = subset(vgData, Platform == \"DS\")\nsubsetX360 = subset(vgData, Platform == \"X360\")\nsubsetPS3 = subset(vgData, Platform == \"PS3\")\nsubsetPS2 = subset(vgData, Platform == \"PS2\")\nsubsetSNES = subset(vgData, Platform == \"SNES\")\nsubsetGBA = subset(vgData, Platform == \"GBA\")\nsubset3DS = subset(vgData, Platform == \"3DS\")\nsubsetPS4 = subset(vgData, Platform == \"PS4\")\nsubsetN64 = subset(vgData, Platform == \"N64\")\nsubsetPS = subset(vgData, Platform == \"PS\")\nsubsetXB = subset(vgData, Platform == \"XB\")\nsubsetPC = subset(vgData, Platform == \"PC\")\nsubset2600 = subset(vgData, Platform == \"2600\")\nsubsetPSP = subset(vgData, Platform == \"PSP\")\nsubsetXOne = subset(vgData, Platform == \"XOne\")\nsubsetGC = subset(vgData, Platform == \"GC\")\nsubsetWiiU = subset(vgData, Platform == \"WiiU\")\nsubsetGEN = subset(vgData, Platform == \"GEN\")\nsubsetDC = subset(vgData, Platform == \"DC\")\nsubsetPSV = subset(vgData, Platform == \"PSV\")\nsubsetSAT = subset(vgData, Platform == \"SAT\")\nsubsetSCD = subset(vgData, Platform == \"SCD\")\nsubsetWS = subset(vgData, Platform == \"WS\")\nsubsetNG = subset(vgData, Platform == \"NG\")\nsubsetTG16 = subset(vgData, Platform == \"TG16\")\nsubset3DO = subset(vgData, Platform == \"3DO\")\nsubsetGG = subset(vgData, Platform == \"GG\")\nsubsetPCFX = subset(vgData, Platform == \"PCFX\")\n\n#count total num\ntotalNum = length(vgData$Rank)\nround(totalNum, digits = 2)\n\n#get numbers/percentages\npercWii = round((length(subsetWii$Platform)/totalNum * 100), digits = 2)\npercNES = round((length(subsetNES$Platform)/totalNum * 100), digits = 2)\npercGB = round((length(subsetGB$Platform)/totalNum * 100), digits = 2)\npercDS = round((length(subsetDS$Platform)/totalNum * 100), digits = 2)\npercX360 = round((length(subsetX360$Platform)/totalNum * 100), digits = 2)\npercPS3 = round((length(subsetPS3$Platform)/totalNum * 100), digits = 2)\npercPS2 = round((length(subsetPS2$Platform)/totalNum * 100), digits = 2)\npercSNES = round((length(subsetSNES$Platform)/totalNum * 100), digits = 2)\npercGBA = round((length(subsetGBA$Platform)/totalNum * 100), digits = 2)\nperc3DS = round((length(subset3DS$Platform)/totalNum * 100), digits = 2)\npercPS4 = round((length(subsetPS4$Platform)/totalNum * 100), digits = 2)\npercN64 = round((length(subsetN64$Platform)/totalNum * 100), digits = 2)\npercPS = round((length(subsetPS$Platform)/totalNum * 100), digits = 2)\npercXB = round((length(subsetXB$Platform)/totalNum * 100), digits = 2)\npercPC = round((length(subsetPC$Platform)/totalNum * 100), digits = 2)\nperc2600 = round((length(subset2600$Platform)/totalNum * 100), digits = 2)\npercPSP = round((length(subsetPSP$Platform)/totalNum * 100), digits = 2)\npercXOne = round((length(subsetXOne$Platform)/totalNum * 100), digits = 2)\npercGC = round((length(subsetGC$Platform)/totalNum * 100), digits = 2)\npercWiiU = round((length(subsetWiiU$Platform)/totalNum * 100), digits = 2)\npercGEN = round((length(subsetGEN$Platform)/totalNum * 100), digits = 2)\npercDC = round((length(subsetDC$Platform)/totalNum * 100), digits = 2)\npercPSV = round((length(subsetPSV$Platform)/totalNum * 100), digits = 2)\npercSAT = round((length(subsetSAT$Platform)/totalNum * 100), digits = 2)\npercSCD = round((length(subsetSCD$Platform)/totalNum * 100), digits = 2)\npercWS = round((length(subsetWS$Platform)/totalNum * 100), digits = 2)\npercNG = round((length(subsetNG$Platform)/totalNum * 100), digits = 2)\npercTG16 = round((length(subsetTG16$Platform)/totalNum * 100), digits = 2)\nperc3DO = round((length(subset3DO$Platform)/totalNum * 100), digits = 2)\npercGG = round((length(subsetGG$Platform)/totalNum * 100), digits = 2)\npercPCFX = round((length(subsetPCFX$Platform)/totalNum * 100), digits = 2)\n\n#create vector of percentages\npercVector = c(percWii,percNES,percGB,percDS,percX360,percPS3,percPS2,percSNES,percGBA,perc3DS,percPS4,percN64,percPS,percXB,percPC,perc2600,percPSP,percXOne,percGC,percWiiU,percGEN,percDC,percPSV,percSAT,percSCD,percWS,percNG,percTG16,perc3DO,percGG,percPCFX)\n\nsliceNames = c(\"Wii\",\"NES\",\"GB\",\"DS\",\"X360\",\"PS3\",\"PS2\",\"SNES\",\"GBA\",\"3DS\",\"PS4\",\"N64\",\"PS\",\"XB\",\"PC\",\"2600\",\"PSP\",\"XOne\",\"GC\",\"WiiU\",\"GEN\",\"DC\",\"PSV\",\"SAT\",\"SCD\",\"WS\",\"NG\",\"TG16\",\"3DO\",\"GG\",\"PCFX\")\n\n#create pie chart\npng(\"VideoGamePercentageByPlatform.png\", width = 15, height = 15, units = \"in\", res = 300)\npie(percVector, labels = sliceNames, main = \"Percentage Distribution of Platforms from Data\")\ndev.off()\n\n#total sales for eu/na for Playstation in 1997\nsubPS97 = subset(subsetPS, Year == 1997)\neusales = round(sum(subPS97$EU_Sales), digits = 3)\nnasales = round(sum(subPS97$NA_Sales), digits = 3)\n\n#get eu sales totals per category\naggregate(vgData$EU_Sales, by=(list(Category=vgData$Genre)), FUN=sum)\naggregate(.vgData$Genre, vgData$EU_Sales, sum)\naggregate(EU_Sales ~ Genre, vgData, sum)\ntapply(vgData$EU_Sales, vgData$Genre, sum)\n\nggplot(subPS97, aes(x=Genre, y=EU_Sales)) + stat_binhex(colour=\"white\") +\n  theme_bw() + scale_fill_gradient(low=\"white\", high=\"blue\") +\n  labs(x=\"Genre\", y=\"EU_Sales\")\n\nggplot(data=subsetPS, aes(Genre, Global_Sales)) +\n  geom_violin(fill=\"lightblue\") +\n  geom_boxplot( alpha=.2)\n",
    "created" : 1478890429007.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2828835079",
    "id" : "D071020A",
    "lastKnownWriteTime" : 1479045560,
    "last_content_update" : 1479045561112,
    "path" : "~/Documents/BSHCE/Year 4/DAD/DAD/VideoGameSales.R",
    "project_path" : "VideoGameSales.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}